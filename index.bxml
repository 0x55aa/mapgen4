<x:document xmlns:x="http://local/" title="Mapgen4">

  <address>20 Jul 2018</address>

  <style>
      button { text-align: center; padding: 0; background: hsl(60,20%,90%); border-radius: 4px; cursor: pointer; }
      button svg { width: 100%; height: 100%; }
      button.current-control { background: hsl(60,100%,80%); }
      button:focus { outline: none; }
      input[type="range"] { cursor: ew-resize; }
      button:disabled, input:disabled { cursor: unset; opacity: 0.25; }
      body.widthflex section > #ui {
          width: unset; max-width: 100%; /* break out of default width */
      }
      #ui {
          display: grid;
          min-height: calc(100vmin - 130px - var(--line-height));
          grid-template-rows: repeat(3, 40px) calc(100vmin - 130px - var(--line-height) - 120px - 40px);
          grid-template-columns: 1fr calc(100vmin - 130px - var(--line-height)) repeat(6, 20px) 1fr;
          grid-row-gap: 10px;
          grid-column-gap: 10px;
      }
      #map        { grid-area: 1 / 2 / span 4 / span 1; width:100%; height:100%; }
      #small      { grid-area: 1 / 3 / span 1 / span 2; }
      #medium     { grid-area: 1 / 5 / span 1 / span 2; }
      #large      { grid-area: 1 / 7 / span 1 / span 2; }
      #ocean      { grid-area: 2 / 3 / span 1 / span 3; }
      #shallow    { grid-area: 2 / 6 / span 1 / span 3; }
      #valley     { grid-area: 3 / 3 / span 1 / span 3; }
      #mountain   { grid-area: 3 / 6 / span 1 / span 3; }
      #sliders    { grid-area: 4 / 3 / span 1 / span 6; overflow-y: scroll; }

      @media (orientation: portrait) {
          /* Put the buttons on top instead of on the right */
          #ui {
              grid-template-rows: repeat(6, 20px) calc(100vmin);
              grid-template-columns: 50px repeat(2, 70px) calc(100vmin - 50px - 140px - 40px);
          }
          #map { grid-area: 7 / 1 / span 1 / span 6; }
          #small { grid-area: 1 / 1 / span 2 / span 1; }
          #medium { grid-area: 3 / 1 / span 2 / span 1; }
          #large { grid-area: 5 / 1 / span 2 / span 1; }
          #ocean { grid-area: 1 / 2 / span 3 / span 1; }
          #shallow { grid-area: 1 / 3 / span 3 / span 1; }
          #valley { grid-area: 4 / 2 / span 3 / span 1; }
          #mountain { grid-area: 4 / 3 / span 3 / span 1; }
          #sliders { grid-area: 1 / 4 / span 6 / span 1; justify-self: end; }
      }

      #mapgen4 { width: 100%; height: 100%; }
      #sliders h3 {
          background-color: hsl(60,20%,90%);
          margin: 0;
          font-size: 66%;
      }
      #sliders label {
          display: block;
          font-size: 66%;
      }
      #sliders label span {
          font-family: var(--monospace);
          display: inline-block;
          width: 17ch;
      }
      #button-reset {
          display: inline-block;
          margin-left: auto;
          margin-right: auto;
          width: 100%;
          height: 2em;
      }
      #timing {
          font-family: var(--sans-serif);
          font-size: 50%;
      }
  </style>

  <x:section>

    <p>
      <b>Paint</b> mountains, valleys, and oceans on the map! It will simulate evaporation, wind, and rainfall to determine biomes and rivers.
    </p>
    
    <div id="ui">
      <button id="small"><svg viewBox="-50 -50 100 100"><circle r="20"/></svg></button>
      <button id="medium"><svg viewBox="-50 -50 100 100"><circle r="35"/></svg></button>
      <button id="large"><svg viewBox="-50 -50 100 100"><circle r="50"/></svg></button>
      
      <button id="ocean"><svg viewBox="-50 -50 100 100"><path d="M -60,-30 Q 0,80 60,-30 z" fill="hsl(240,50%,40%)"/></svg></button>
      <button id="shallow"><svg viewBox="-50 -50 100 100"><path d="M -60,-10 Q 0,30 60,-10 z" fill="hsl(200,50%,70%)"/></svg></button>
      <button id="valley"><svg viewBox="-50 -50 100 100"><path d="M -60,10 L -50,-10 L 50,-10 L 60,10 z" fill="hsl(100,50%,70%)"/></svg></button>
      <button id="mountain"><svg viewBox="-50 -50 100 100"><path d="M -60,30 L 0,-30 L 60,30 z" fill="hsl(60,50%,40%)"/></svg></button>
      
      <div id="sliders">
        <button id="button-reset">Reset</button>
      </div>
    
      <div id="map"><canvas id="mapgen4" width="2048" height="2048"/></div>
    </div>
    <div id="timing">Loading</div>

    <p>
      Treat this as a tool. Everything you create with it is yours to do with as you please. In Chrome you can right click on the map to save a high resolution image (but <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=749824">not in Firefox</a>). Credit is appreciated but not required.
    </p>

    <p>
      Goals for this project:
    </p>

    <ul>
      <li>A hand-drawn inspired look. If you look at maps from Lord of the Rings and other fantasy settings, you'll see the rivers and coastlines are <em>top-down</em> but the mountains and trees are <em>side view</em>. The map above is rendered in full 3D (try the rotate_deg and tilt_deg sliders!) but I used a custom projection and outline to more closely match a hand-drawn map.</li>
      <li>Being able to paint your own features on the map. With procedural generation we usually let the system generate everything. I wanted to generate something (mountains, valleys, oceans), then let you change those things, and then generate the rest (biomes, rivers). Maybe in a future version also let you paint the biomes. Making the map paintable also meant I needed to make it <em>fast</em>.</li>
    </ul>
    
    <p>
      Status of the project: Finished for now. I have a <a href="http://simblob.blogspot.com/search/label/mapgen4">series of blog posts</a> about how I made these maps:
    </p>

    <ul>
      <li><a href="http://simblob.blogspot.com/2018/08/mapgen4-goals.html">History</a> of the project</li>
      <li><a href="http://simblob.blogspot.com/2018/08/mapgen4-elevation.html">Elevation</a> to match the desired look instead of tweaking the look to match the elevation</li>
      <li><a href="http://simblob.blogspot.com/2018/09/mapgen4-elevation-painting.html">Distance fields for elevation</a></li>
      <li><a href="http://simblob.blogspot.com/2018/09/mapgen4-threads.html">Multithreading</a> to make it run acceptably fast</li>
      <li>Fixing the <a href="http://simblob.blogspot.com/2018/09/mapgen4-river-appearance.html">appearance of rivers</a></li>
      <li>Revisiting <a href="http://simblob.blogspot.com/2018/09/mapgen4-elevation-painting-revisited.html">distance fields</a>, which didn't work out like I hoped</li>
      <li><a href="http://simblob.blogspot.com/2018/09/mapgen4-rainfall.html">Rainfall</a>, biomes, evaporation, wind</li>
      <li>Rendering with an <a href="http://simblob.blogspot.com/2018/09/mapgen4-oblique-projection.html">oblique projection</a>, not the standard rotate+translate+scale</li>
      <li>Rendering <a href="http://simblob.blogspot.com/2018/10/mapgen4-outlines.html">outlines</a></li>
      <li>Some <a href="http://simblob.blogspot.com/2018/09/mapgen4-bug-fixes.html">bug fixes</a></li>
      <li><a href="http://simblob.blogspot.com/2018/10/mapgen4-river-representation.html">River representation</a> with binary trees</li>
    </ul>

    <p>
      Also see <a href="http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/">my project from 2010</a>, where I started developing these techniques. I have a long list of things I'd like to add, but I'm not actively working on them. I'd like to improve the UI, and also add trees, more biomes, towns, seasons, and lots more. Someday. Maybe that'll be mapgen5.
    </p>
    
  </x:section>
  
  <x:footer>
    <script src="/js/draggable.js"/>
    <script src="build/_bundle.js"/>

    Created 20 Jul 2018 with regl.js, dat.gui, delaunator, poisson-disk-sampling, simplex-noise, hash-int, gl-matrix, flatqueue, webworkify, and other libraries; &#160;
    <!-- hhmts start -->Last modified: 03 Dec 2018<!-- hhmts end -->
  </x:footer>
  
  
</x:document>

